[
    {
        "id": "cb6c4179a6cb6b83",
        "type": "tab",
        "label": "OPACA Starter",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8eebe88f7f18ab83",
        "type": "subflow",
        "name": "Action Result",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "2ed9f4f19816e075"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 560,
                "y": 180,
                "wires": [
                    {
                        "id": "e1fc89e7ef9c231d",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "31207bed1bed7dd2",
        "type": "subflow",
        "name": "List All Services",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "e221417c6bf431fd"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 160,
            "y": 30,
            "wires": []
        }
    },
    {
        "id": "0fdf196669902d01",
        "type": "group",
        "z": "cb6c4179a6cb6b83",
        "name": "Invoke Action",
        "style": {
            "label": true
        },
        "nodes": [
            "4d75991bea25e9e7",
            "ad769c406374ce20"
        ],
        "x": 74,
        "y": 159,
        "w": 492,
        "h": 82
    },
    {
        "id": "cbe93a835b724636",
        "type": "group",
        "z": "cb6c4179a6cb6b83",
        "name": "Get All Actions",
        "style": {
            "label": true
        },
        "nodes": [
            "0ff670422babe462",
            "7fe6b73694dd8759",
            "2447ce5697464ff9"
        ],
        "x": 54,
        "y": 19,
        "w": 532,
        "h": 122
    },
    {
        "id": "e2abaa591482d55a",
        "type": "mqtt-broker",
        "name": "",
        "broker": "test.mosquitto.org",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "c880546a77f4b9a9",
        "type": "ui_tab",
        "name": "Warehouse",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7f79ffd707e60a55",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#72a796",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#72a796",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#72a796",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#a1c4b9",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#72a796",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "e325e24e703e0669",
        "type": "ui_group",
        "name": "Inventory",
        "tab": "c880546a77f4b9a9",
        "order": 1,
        "disp": false,
        "width": 16,
        "collapse": false,
        "className": ""
    },
    {
        "id": "7639b9a6759ca4c9",
        "type": "ui_spacer",
        "z": "cb6c4179a6cb6b83",
        "name": "spacer",
        "group": "e325e24e703e0669",
        "order": 1,
        "width": 16,
        "height": 1
    },
    {
        "id": "2ed9f4f19816e075",
        "type": "function",
        "z": "8eebe88f7f18ab83",
        "name": "url creation",
        "func": "msg.url = \"http://localhost:8000/invoke/\" + msg.actionName;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 80,
        "wires": [
            [
                "e1fc89e7ef9c231d"
            ]
        ]
    },
    {
        "id": "e1fc89e7ef9c231d",
        "type": "http request",
        "z": "8eebe88f7f18ab83",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 390,
        "y": 80,
        "wires": [
            [
                "8525854f8a23eedd"
            ]
        ]
    },
    {
        "id": "8525854f8a23eedd",
        "type": "debug",
        "z": "8eebe88f7f18ab83",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 80,
        "wires": []
    },
    {
        "id": "e221417c6bf431fd",
        "type": "http request",
        "z": "31207bed1bed7dd2",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://localhost:8000/agents",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 210,
        "y": 80,
        "wires": [
            [
                "a3a91a30d70868df"
            ]
        ]
    },
    {
        "id": "12e4351c46b9244b",
        "type": "debug",
        "z": "31207bed1bed7dd2",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 80,
        "wires": []
    },
    {
        "id": "a3a91a30d70868df",
        "type": "function",
        "z": "31207bed1bed7dd2",
        "name": "function 1",
        "func": "msg.payload = msg.payload.map(o => o.actions);\nconst actions = [];\nmsg.payload.forEach(element =>\n    element.forEach(element =>\n        actions.push(element)\n    )\n);\n\nconst actionParams = new Map(actions.map(i => [i.name, Object.keys(i.parameters)]));\n\nglobal.set(\"ActionParameters\", actionParams);\nmsg.payload = new Map(actions.map(i => [i.name, i]));\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 80,
        "wires": [
            [
                "12e4351c46b9244b"
            ]
        ]
    },
    {
        "id": "4d75991bea25e9e7",
        "type": "inject",
        "z": "cb6c4179a6cb6b83",
        "g": "0fdf196669902d01",
        "name": "Action invoke",
        "props": [
            {
                "p": "actionName",
                "v": "GetUserBookings",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 190,
        "y": 200,
        "wires": [
            [
                "ad769c406374ce20"
            ]
        ]
    },
    {
        "id": "ad769c406374ce20",
        "type": "subflow:8eebe88f7f18ab83",
        "z": "cb6c4179a6cb6b83",
        "g": "0fdf196669902d01",
        "name": "",
        "x": 470,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "0ff670422babe462",
        "type": "inject",
        "z": "cb6c4179a6cb6b83",
        "g": "cbe93a835b724636",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 100,
        "wires": [
            [
                "7fe6b73694dd8759"
            ]
        ]
    },
    {
        "id": "7fe6b73694dd8759",
        "type": "subflow:31207bed1bed7dd2",
        "z": "cb6c4179a6cb6b83",
        "g": "cbe93a835b724636",
        "name": "",
        "x": 480,
        "y": 100,
        "wires": []
    },
    {
        "id": "2447ce5697464ff9",
        "type": "comment",
        "z": "cb6c4179a6cb6b83",
        "g": "cbe93a835b724636",
        "name": "short explanation",
        "info": "In the List All Services subflow, the action names are\nmapped to their **parameters** (both as strings) and the map is\npassed to a global variable called \"ActionParameters\"\nThis will further be used to parse and invoke action parameters in the\ncustom OPACA action node we intend to create",
        "x": 480,
        "y": 60,
        "wires": []
    }
]